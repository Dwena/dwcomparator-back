server.port=8080

#configuration de la datasource
spring.datasource.initialization-mode=always
spring.datasource.driver-class-name=org.postgresql.Driver
                                    #org.mariadb.jdbc.Driver 
                                    #com.mysql.cj.jdbc.Driver (Driver MySQL8)

spring.datasource.url=jdbc:postgresql://localhost/dwcomparator
#si MySQL : jdbc:mysql://localhost:3306/myapi1bdd?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC 
#si PostgreSQL : jdbc:mariadb://localhost:3306/myapi1bdd 

spring.datasource.username=postgres
spring.datasource.password=postgres

#config de JPA/Hibernate
#dialect : classe permettant de traduire les req vers le SQL spécifique au SGBD utilisé
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
                                       #org.hibernate.dialect.MariaDBDialect
                                       #org.hibernate.dialect.MySQL8Dialect

#Stratégie utilisée pour générer les tables en Bdd
spring.jpa.hibernate.ddl-auto=create


#config des logs
#TODO : mettre à false en production
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.generate_statistics=false


#Loggers
logging.level.org.springframework.web=info
logging.level.org.springframework.core=info
logging.level.org.springframework.beans=info
logging.level.org.springframework.context=info

logging.level.org.hibernate=info
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.type=info
logging.level.org.hibernate.tool.hbm2ddl=info
logging.level.org.hibernate.jdbc=info
logging.level.org.hibernate.transaction=info
logging.level.org.hibernate.cache=info

#Documentation du service
#En ajoutant la librairie springdoc-openapi-ui, la doc json sera disponible
#à l'url : /v3/api-docs
#on peut personnaliser cette URL en utilisant la propriété suivante : 
#springdoc.api-docs.path=/api-docs

#Monitoring du service
#en ajoutant Spring Actuator, voir dependency dans le pom.xml
#management.server.port=8090
management.endpoints.web.exposure.include=*
#actuator vous définira les URLs accessibles ici : http://localhost:8080/actuator


#app properties
app.storagefolder=C:/tempBidon/

#contraintes lors du upload
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB


jwt.secret=myapisecretkey123
jwt.get.token.uri=/authenticate

webdriver.chrome.driver=c:/tempBidon/chromedriver_win32/chromedriver.exe